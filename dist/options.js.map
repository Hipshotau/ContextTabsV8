{"version":3,"file":"options.js","mappings":"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","sources":["webpack://context-focus/./src/api/storageApi.ts","webpack://context-focus/./src/api/parkedLinksApi.ts","webpack://context-focus/webpack/bootstrap","webpack://context-focus/./src/options/options.ts"],"sourcesContent":["import { FocusSettings, StorageData as TypesStorageData, FocusState } from \"../types/index\";\n\n// Re-export the StorageData interface from types/index.d.ts\nexport type StorageData = TypesStorageData;\n\n/**\n * Get an object containing the requested keys.\n */\nexport function getStorage<T extends keyof StorageData>(\n  keys: T[]\n): Promise<Pick<StorageData, T>> {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get(keys, (result) => {\n      if (chrome.runtime.lastError) {\n        return reject(chrome.runtime.lastError);\n      }\n      resolve(result as Pick<StorageData, T>);\n    });\n  });\n}\n\n/**\n * Set or update the given keys in storage.\n */\nexport function setStorage(data: Partial<StorageData>): Promise<void> {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.set(data, () => {\n      if (chrome.runtime.lastError) {\n        return reject(chrome.runtime.lastError);\n      }\n      resolve();\n    });\n  });\n}\n\n/**\n * Add a context entry to history\n */\nexport async function addContextToHistory(\n  context: string,\n  url: string,\n  confidence: number\n): Promise<void> {\n  const { contextHistory } = await getStorage([\"contextHistory\"]);\n  const newHistory = contextHistory || [];\n  \n  // Add new entry\n  newHistory.push({\n    context,\n    url,\n    timestamp: Date.now(),\n    confidence\n  });\n  \n  // Limit history size\n  if (newHistory.length > 100) {\n    newHistory.shift();\n  }\n  \n  await setStorage({ contextHistory: newHistory });\n}\n\n/**\n * Get the current focus state\n */\nexport async function getFocusState(): Promise<FocusState> {\n  const { focusState } = await getStorage([\"focusState\"]);\n  \n  // Default state if none exists\n  const defaultState: FocusState = {\n    active: false,\n    allowedContexts: []\n  };\n  \n  return { ...defaultState, ...focusState };\n}\n\n/**\n * Update the focus state\n */\nexport async function setFocusState(partialState: Partial<FocusState>): Promise<void> {\n  const currentState = await getFocusState();\n  await setStorage({ \n    focusState: { ...currentState, ...partialState }\n  });\n}","import { getStorage, setStorage } from \"./storageApi\";\nimport { ParkedLink } from \"../types/index\";\n\n/**\n * Save a link for later viewing\n */\nexport async function saveForLater(url: string, context: string, title?: string): Promise<void> {\n  const { parkedLinks = [] } = await getStorage([\"parkedLinks\"]);\n  \n  // Check if the URL is already parked to avoid duplicates\n  const isDuplicate = parkedLinks.some(link => link.url === url);\n  \n  if (!isDuplicate) {\n    const newLink: ParkedLink = {\n      url,\n      title,\n      context,\n      timestamp: Date.now()\n    };\n    \n    await setStorage({\n      parkedLinks: [...parkedLinks, newLink]\n    });\n  }\n}\n\n/**\n * Get all parked links\n */\nexport async function getParkedLinks(): Promise<ParkedLink[]> {\n  const { parkedLinks = [] } = await getStorage([\"parkedLinks\"]);\n  return parkedLinks;\n}\n\n/**\n * Open all parked links in new tabs and clear the list\n */\nexport async function releaseParkedLinks(): Promise<void> {\n  const parkedLinks = await getParkedLinks();\n  \n  if (parkedLinks.length === 0) {\n    return;\n  }\n  \n  // Create a new tab group for the parked links\n  const currentWindow = await chrome.windows.getCurrent();\n  let groupId: number | undefined;\n  \n  try {\n    // Open all the links in new tabs\n    const openedTabIds: number[] = [];\n    \n    for (const link of parkedLinks) {\n      const tab = await chrome.tabs.create({\n        url: link.url,\n        active: false\n      });\n      \n      if (tab.id) {\n        openedTabIds.push(tab.id);\n      }\n    }\n    \n    // Group the tabs if we have any\n    if (openedTabIds.length > 0) {\n      try {\n        groupId = await chrome.tabs.group({\n          tabIds: openedTabIds\n        });\n        \n        if (groupId) {\n          await chrome.tabGroups.update(groupId, {\n            title: \"Parked Links\",\n            color: \"blue\"\n          });\n        }\n      } catch (groupError) {\n        console.error(\"Error creating tab group:\", groupError);\n      }\n    }\n    \n    // Clear the parked links list\n    await setStorage({ parkedLinks: [] });\n    \n    // Show a notification\n    chrome.notifications.create({\n      type: \"basic\",\n      iconUrl: chrome.runtime.getURL(\"icons/icon48.png\"),\n      title: \"Parked Links Opened\",\n      message: `Opened ${parkedLinks.length} links that were saved during your focus session.`\n    });\n  } catch (error) {\n    console.error(\"Error opening parked links:\", error);\n  }\n}\n\n/**\n * More robust function to navigate back or close the current tab\n */\nexport async function goBackOrClose(tabId: number): Promise<void> {\n  try {\n    // Get tab info first to confirm it exists\n    const tab = await chrome.tabs.get(tabId);\n    \n    // First try to determine if we can go back using script injection\n    try {\n      const historyResults = await chrome.scripting.executeScript({\n        target: { tabId },\n        func: () => ({\n          canGoBack: window.history.length > 1,\n          url: window.location.href\n        })\n      });\n      \n      const { canGoBack } = historyResults[0].result;\n      \n      if (canGoBack) {\n        // Navigate back if possible using script injection\n        await chrome.scripting.executeScript({\n          target: { tabId },\n          func: () => window.history.back()\n        });\n        \n        // Success, we're done\n        return;\n      }\n      \n      // Can't go back, use fallback approach\n      await handleNavigationFallback(tabId, tab);\n    } catch (err) {\n      console.error(\"Script execution error:\", err);\n      \n      // Fallback to simpler chrome.tabs.goBack API\n      try {\n        await chrome.tabs.goBack(tabId);\n      } catch (backError) {\n        // If that fails too, use final fallback\n        await handleNavigationFallback(tabId, tab);\n      }\n    }\n  } catch (err) {\n    console.error(\"Tab lookup error:\", err);\n    // Tab might no longer exist, nothing to do\n  }\n}\n\n/**\n * Fallback navigation handler when going back isn't possible\n */\nasync function handleNavigationFallback(tabId: number, tab: chrome.tabs.Tab): Promise<void> {\n  try {\n    // Get all tabs in the window\n    const allTabs = await chrome.tabs.query({ windowId: tab.windowId });\n    \n    if (allTabs.length > 1) {\n      // More than one tab, find one to focus\n      const currentIndex = allTabs.findIndex(t => t.id === tabId);\n      const targetIndex = currentIndex > 0 ? currentIndex - 1 : (currentIndex + 1) % allTabs.length;\n      const targetTab = allTabs[targetIndex];\n      \n      // Focus the other tab first\n      if (targetTab.id) {\n        await chrome.tabs.update(targetTab.id, { active: true });\n        \n        // Then remove the current tab\n        setTimeout(() => {\n          chrome.tabs.remove(tabId).catch(e => {\n            console.error(\"Tab removal failed:\", e);\n          });\n        }, 100);\n      }\n    } else {\n      // Last tab, navigate to blank page instead\n      await chrome.tabs.update(tabId, { url: \"about:blank\" });\n    }\n  } catch (e) {\n    console.error(\"Navigation fallback failed:\", e);\n    // Last resort - try basic navigation\n    try {\n      await chrome.tabs.update(tabId, { url: \"about:blank\" });\n    } catch (finalError) {\n      console.error(\"Final fallback failed:\", finalError);\n    }\n  }\n}\n\n/**\n * Show a toast notification in the current tab\n */\nexport async function showToast(tabId: number, message: string, duration = 3000): Promise<void> {\n  try {\n    await chrome.scripting.executeScript({\n      target: { tabId },\n      func: (msg: string, dur: number) => {\n        const toast = document.createElement(\"div\");\n        toast.style.cssText = `\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          background-color: rgba(0, 102, 204, 0.9);\n          color: white;\n          padding: 12px 20px;\n          border-radius: 4px;\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n          font-family: Arial, sans-serif;\n          z-index: 2147483647;\n          max-width: 300px;\n          transition: opacity 0.3s ease-in-out;\n        `;\n        toast.textContent = msg;\n        document.body.appendChild(toast);\n        \n        // Fade out and remove\n        setTimeout(() => {\n          toast.style.opacity = \"0\";\n          setTimeout(() => toast.remove(), 300);\n        }, dur - 300);\n      },\n      args: [message, duration]\n    });\n  } catch (error) {\n    console.error(\"Error showing toast:\", error);\n  }\n}\n\n/**\n * Clear all parked links without opening them\n */\nexport async function clearParkedLinks(): Promise<void> {\n  await setStorage({ parkedLinks: [] });\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { getStorage, setStorage } from \"../api/storageApi\";\nimport { FocusSettings } from \"../types/index\";\nimport { getParkedLinks, releaseParkedLinks, clearParkedLinks } from \"../api/parkedLinksApi\";\n\n// DOM Elements\nconst extensionEnabledCheckbox = document.getElementById(\"extensionEnabledCheckbox\") as HTMLInputElement;\nconst notificationsCheckbox = document.getElementById(\"notificationsCheckbox\") as HTMLInputElement;\nconst switchThresholdInput = document.getElementById(\"switchThresholdInput\") as HTMLInputElement;\nconst timeWindowInput = document.getElementById(\"timeWindowInput\") as HTMLInputElement;\nconst saveBtn = document.getElementById(\"saveBtn\") as HTMLButtonElement;\nconst resetBtn = document.getElementById(\"resetBtn\") as HTMLButtonElement;\nconst subUrlOverridesList = document.getElementById(\"subUrlOverridesList\") as HTMLDivElement;\nconst overrideUrlInput = document.getElementById(\"overrideUrlInput\") as HTMLInputElement;\nconst overrideContextSelect = document.getElementById(\"overrideContextSelect\") as HTMLSelectElement;\nconst addOverrideBtn = document.getElementById(\"addOverrideBtn\") as HTMLButtonElement;\n\n// Parked Links UI Elements\nconst parkedLinksList = document.getElementById(\"parkedLinksList\") as HTMLDivElement;\nconst releaseParkedBtn = document.getElementById(\"releaseParkedBtn\") as HTMLButtonElement;\nconst clearParkedBtn = document.getElementById(\"clearParkedBtn\") as HTMLButtonElement;\n\n// Default focus settings\nconst DEFAULT_FOCUS_SETTINGS: FocusSettings = {\n  enabled: true,\n  notificationsEnabled: true,\n  switchThreshold: 3,\n  timeWindowMinutes: 30\n};\n\n// Initialize UI\ndocument.addEventListener(\"DOMContentLoaded\", initializeOptions);\n\nasync function initializeOptions() {\n  const storage = await getStorage([\n    \"extensionEnabled\", \n    \"focusSettings\",\n    \"subUrlOverrides\",\n    \"parkedLinks\"\n  ]);\n  \n  // Extension enabled/disabled\n  extensionEnabledCheckbox.checked = storage.extensionEnabled ?? true;\n  \n  // Focus Settings\n  const focusSettings = storage.focusSettings || DEFAULT_FOCUS_SETTINGS;\n  notificationsCheckbox.checked = focusSettings.notificationsEnabled ?? true;\n  switchThresholdInput.value = focusSettings.switchThreshold?.toString() || \"3\";\n  timeWindowInput.value = focusSettings.timeWindowMinutes?.toString() || \"30\";\n  \n  // Add event listeners\n  saveBtn.addEventListener(\"click\", saveOptions);\n  resetBtn.addEventListener(\"click\", resetOptions);\n  \n  // Load URL overrides\n  displayUrlOverrides(storage.subUrlOverrides || {});\n  addOverrideBtn.addEventListener(\"click\", addNewOverride);\n  \n  // Load parked links\n  await displayParkedLinks(storage.parkedLinks || []);\n  \n  // Setup parked links actions\n  if (releaseParkedBtn) {\n    releaseParkedBtn.addEventListener(\"click\", handleReleaseParkedLinks);\n  }\n  \n  if (clearParkedBtn) {\n    clearParkedBtn.addEventListener(\"click\", handleClearParkedLinks);\n  }\n}\n\nfunction getDefaultFocusSettings(): FocusSettings {\n  return {\n    enabled: true,\n    notificationsEnabled: true,\n    switchThreshold: 3,\n    timeWindowMinutes: 30\n  };\n}\n\nasync function saveOptions() {\n  const focusSettings: FocusSettings = {\n    enabled: true,\n    notificationsEnabled: notificationsCheckbox.checked,\n    switchThreshold: parseInt(switchThresholdInput.value) || 3,\n    timeWindowMinutes: parseInt(timeWindowInput.value) || 30\n  };\n  \n  // Collect URL Overrides from UI\n  const subUrlOverrides: Record<string, string> = {};\n  const overrideItems = subUrlOverridesList.querySelectorAll(\".override-item\");\n  overrideItems.forEach(item => {\n    const urlSpan = item.querySelector(\".override-url\") as HTMLSpanElement;\n    const contextSpan = item.querySelector(\".override-context\") as HTMLSpanElement;\n    if (urlSpan && contextSpan) {\n      subUrlOverrides[urlSpan.textContent || \"\"] = contextSpan.textContent || \"\";\n    }\n  });\n  \n  // Update storage with new settings\n  await setStorage({\n    extensionEnabled: extensionEnabledCheckbox.checked,\n    focusSettings,\n    subUrlOverrides\n  });\n  \n  // Show success notification\n  showNotification(\"Options saved!\");\n}\n\nfunction showNotification(message: string, duration = 2000) {\n  const notification = document.createElement(\"div\");\n  notification.textContent = message;\n  notification.style.position = \"fixed\";\n  notification.style.bottom = \"20px\";\n  notification.style.right = \"20px\";\n  notification.style.backgroundColor = \"#4CAF50\";\n  notification.style.color = \"white\";\n  notification.style.padding = \"10px 20px\";\n  notification.style.borderRadius = \"4px\";\n  notification.style.zIndex = \"1000\";\n  \n  document.body.appendChild(notification);\n  \n  setTimeout(() => {\n    notification.remove();\n  }, duration);\n}\n\nasync function resetOptions() {\n  // Reset UI to defaults\n  extensionEnabledCheckbox.checked = true;\n  const defaultSettings = getDefaultFocusSettings();\n  notificationsCheckbox.checked = defaultSettings.notificationsEnabled;\n  switchThresholdInput.value = defaultSettings.switchThreshold.toString();\n  timeWindowInput.value = defaultSettings.timeWindowMinutes.toString();\n  \n  // Clear URL overrides\n  subUrlOverridesList.innerHTML = '';\n  \n  // Save defaults\n  await setStorage({\n    extensionEnabled: true,\n    focusSettings: defaultSettings,\n    subUrlOverrides: {}\n  });\n  \n  showNotification(\"Options reset to defaults\");\n}\n\n// URL Overrides UI Functions\nfunction displayUrlOverrides(overrides: Record<string, string>) {\n  subUrlOverridesList.innerHTML = '';\n  \n  if (Object.keys(overrides).length === 0) {\n    const emptyMsg = document.createElement('div');\n    emptyMsg.className = 'empty-state';\n    emptyMsg.textContent = 'No URL overrides configured yet.';\n    subUrlOverridesList.appendChild(emptyMsg);\n    return;\n  }\n  \n  Object.entries(overrides).forEach(([url, context]) => {\n    addOverrideItem(url, context);\n  });\n}\n\nfunction addNewOverride() {\n  const url = overrideUrlInput.value.trim();\n  const context = overrideContextSelect.value;\n  \n  if (!url) {\n    showNotification(\"Please enter a URL\", 3000);\n    return;\n  }\n  \n  addOverrideItem(url, context);\n  overrideUrlInput.value = '';\n}\n\nfunction addOverrideItem(url: string, context: string) {\n  const item = document.createElement('div');\n  item.className = 'override-item';\n  \n  const urlSpan = document.createElement('span');\n  urlSpan.className = 'override-url';\n  urlSpan.textContent = url;\n  \n  const contextSpan = document.createElement('span');\n  contextSpan.className = 'override-context';\n  contextSpan.textContent = context;\n  \n  const deleteButton = document.createElement('button');\n  deleteButton.innerHTML = '&times;';\n  deleteButton.className = 'link-remove';\n  deleteButton.addEventListener('click', () => {\n    item.remove();\n  });\n  \n  item.appendChild(urlSpan);\n  item.appendChild(contextSpan);\n  item.appendChild(deleteButton);\n  \n  subUrlOverridesList.appendChild(item);\n}\n\n// Parked Links UI Functions\nasync function displayParkedLinks(parkedLinks: Array<{url: string, title?: string, timestamp: number}>) {\n  if (!parkedLinksList) return;\n  \n  parkedLinksList.innerHTML = '';\n  \n  if (!parkedLinks || parkedLinks.length === 0) {\n    const emptyMsg = document.createElement('div');\n    emptyMsg.className = 'empty-state';\n    emptyMsg.textContent = 'No links have been parked yet.';\n    parkedLinksList.appendChild(emptyMsg);\n    return;\n  }\n  \n  parkedLinks.forEach(link => {\n    const linkItem = document.createElement('div');\n    linkItem.className = 'parked-link-item';\n    \n    const linkInfo = document.createElement('div');\n    \n    const title = document.createElement('div');\n    title.className = 'link-title';\n    title.textContent = link.title || 'Untitled';\n    \n    const url = document.createElement('div');\n    url.className = 'link-url';\n    url.textContent = link.url;\n    \n    linkInfo.appendChild(title);\n    linkInfo.appendChild(url);\n    \n    const removeBtn = document.createElement('button');\n    removeBtn.className = 'link-remove';\n    removeBtn.innerHTML = '&times;';\n    removeBtn.addEventListener('click', async () => {\n      await removeParkedLink(link.url);\n      linkItem.remove();\n      \n      // If this was the last item, show empty state\n      if (parkedLinksList.children.length === 0) {\n        await displayParkedLinks([]);\n      }\n    });\n    \n    linkItem.appendChild(linkInfo);\n    linkItem.appendChild(removeBtn);\n    \n    parkedLinksList.appendChild(linkItem);\n  });\n}\n\nasync function removeParkedLink(url: string) {\n  const { parkedLinks } = await getStorage(['parkedLinks']);\n  \n  if (parkedLinks) {\n    const updatedLinks = parkedLinks.filter(link => link.url !== url);\n    await setStorage({ parkedLinks: updatedLinks });\n  }\n}\n\nasync function handleReleaseParkedLinks() {\n  try {\n    await releaseParkedLinks();\n    await displayParkedLinks([]);\n    showNotification(\"All links have been opened in new tabs\");\n  } catch (error) {\n    console.error(\"Error releasing parked links:\", error);\n    showNotification(\"Error opening links\", 3000);\n  }\n}\n\nasync function handleClearParkedLinks() {\n  if (confirm(\"Are you sure you want to clear all parked links?\")) {\n    await clearParkedLinks();\n    await displayParkedLinks([]);\n    showNotification(\"All parked links have been cleared\");\n  }\n}"],"names":["getStorage","keys","Promise","resolve","reject","chrome","storage","local","get","result","runtime","lastError","setStorage","data","set","async","getFocusState","focusState","active","allowedContexts","context","url","confidence","contextHistory","newHistory","push","timestamp","Date","now","length","shift","partialState","currentState","getParkedLinks","parkedLinks","handleNavigationFallback","tabId","tab","allTabs","tabs","query","windowId","currentIndex","findIndex","t","id","targetTab","update","setTimeout","remove","catch","e","console","error","finalError","title","some","link","newLink","groupId","windows","getCurrent","openedTabIds","create","group","tabIds","tabGroups","color","groupError","notifications","type","iconUrl","getURL","message","historyResults","scripting","executeScript","target","func","canGoBack","window","history","location","href","back","err","goBack","backError","duration","msg","dur","toast","document","createElement","style","cssText","textContent","body","appendChild","opacity","args","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","extensionEnabledCheckbox","getElementById","notificationsCheckbox","switchThresholdInput","timeWindowInput","saveBtn","resetBtn","subUrlOverridesList","overrideUrlInput","overrideContextSelect","addOverrideBtn","parkedLinksList","releaseParkedBtn","clearParkedBtn","DEFAULT_FOCUS_SETTINGS","enabled","notificationsEnabled","switchThreshold","timeWindowMinutes","saveOptions","focusSettings","checked","parseInt","value","subUrlOverrides","querySelectorAll","forEach","item","urlSpan","querySelector","contextSpan","extensionEnabled","showNotification","notification","position","bottom","right","backgroundColor","padding","borderRadius","zIndex","resetOptions","defaultSettings","toString","innerHTML","addNewOverride","trim","addOverrideItem","className","deleteButton","addEventListener","displayParkedLinks","emptyMsg","linkItem","linkInfo","removeBtn","updatedLinks","filter","removeParkedLink","children","handleReleaseParkedLinks","releaseParkedLinks","handleClearParkedLinks","confirm","clearParkedLinks","overrides","Object","entries","displayUrlOverrides"],"sourceRoot":""}